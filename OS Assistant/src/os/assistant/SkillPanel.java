/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package os.assistant;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.net.URL;
import javax.imageio.ImageIO;

/**
 *
 * @author Daniel
 */
public class SkillPanel extends javax.swing.JPanel implements Comparable<String> {

    /**
     * Creates new form SkillPanel
     */
    public SkillPanel() {
        initComponents();
        gfx = canvas.getGraphics();
    }
    private Graphics gfx;
    private Image image;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        skillName = new javax.swing.JLabel();
        xpGained = new javax.swing.JLabel();
        xpRem = new javax.swing.JLabel();
        rate = new javax.swing.JLabel();
        canvas = new java.awt.Canvas();

        skillName.setText("Skill Name:");

        xpGained.setText("XP Gained:");

        xpRem.setText("Experience Remaining:");

        rate.setText("XP Rate:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(xpRem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(xpGained, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(skillName, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(skillName)
                        .addGap(18, 18, 18)))
                .addComponent(xpGained)
                .addGap(11, 11, 11)
                .addComponent(xpRem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rate)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private String skill_name;
    
    private SkillStats stat;
    
    public SkillStats getStat()
    {
        return stat;
    }
    
    public void setStats(SkillStats stat) {
        this.stat = stat;
        skill_name = stat.skillName;
        try {
            if (image != null)
                image = ImageIO.read(new URL("http://www.runescape.com/img/rsp777/hiscores/skill_icon_" + stat.skillName.toLowerCase() + "1.gif"));
        }
        catch (Exception e) {
            image = null;
        }
        skillName.setText("Skill Name: " + stat.skillName);
        xpGained.setText("XP Gained: " + stat.XPGained);
        xpRem.setText("XP Remaining: " + stat.XPRemaining);
    }
    
    public void setXPHour(int rate) {
        this.rate.setText("XP Rate: " + rate + " XP/hr");
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
        if (image != null)
            gfx.drawImage(image, 5, 5, null);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (obj instanceof SkillPanel)
            return skill_name.equals(((SkillPanel)obj).skill_name);
        return false;
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas;
    private javax.swing.JLabel rate;
    private javax.swing.JLabel skillName;
    private javax.swing.JLabel xpGained;
    private javax.swing.JLabel xpRem;
    // End of variables declaration//GEN-END:variables

    @Override
    public int compareTo(String o) {
        return skill_name.compareTo(o);
    }
}
